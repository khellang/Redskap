<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#+
    private static IEnumerable<string> GetNames(string filename, int index)
    {
        foreach (var line in File.ReadLines(filename, Encoding.GetEncoding("ISO-8859-1")))
        {
            var name = line.Split('\t')[index];

            if (name.Length > 3)
            {
                yield return name;
            }
        }
    }

    public void GenerateClass(string className, string filename, int index)
    {
#>
// <auto-generated />

namespace Redskap
{
    using System.Diagnostics;
    using System.Runtime.CompilerServices;

    [CompilerGenerated]
    [DebuggerNonUserCode]
    internal static class <#= className #>
    {
        public static readonly string[] All =
        {
        <#+ foreach (var name in GetNames(filename, index)) { #>
    <#= name #>,
        <#+ } #>
};
    }
}
<#+ } #>